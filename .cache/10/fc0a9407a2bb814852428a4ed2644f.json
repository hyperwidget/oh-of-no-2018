{"id":"runner.js","dependencies":[{"name":"/Users/hunter/Documents/Projects/oh-of-no-2018/package.json","includedInParent":true,"mtime":1543607049608},{"name":"./solutions","loc":{"line":1,"column":27},"parent":"/Users/hunter/Documents/Projects/oh-of-no-2018/runner.js","resolved":"/Users/hunter/Documents/Projects/oh-of-no-2018/solutions/index.js"},{"name":"./tests","loc":{"line":2,"column":23},"parent":"/Users/hunter/Documents/Projects/oh-of-no-2018/runner.js","resolved":"/Users/hunter/Documents/Projects/oh-of-no-2018/tests/index.js"},{"name":"process","parent":"/Users/hunter/Documents/Projects/oh-of-no-2018/runner.js","resolved":"/Users/hunter/Documents/Projects/oh-of-no-2018/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\nvar solutions = _interopRequireWildcard(require(\"./solutions\"));\n\nvar tests = _interopRequireWildcard(require(\"./tests\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconsole.log(process);\nvar day = process.argv[2];\nvar part = process.argv[3];\nvar command = process.argv[4];\nconsole.log(day);\nconsole.log(part);\nconsole.log(command);\nconsole.log(solutions[day]);","map":{"mappings":[{"generated":{"line":4,"column":0},"source":"runner.js","original":{"line":1,"column":0}},{"generated":{"line":6,"column":0},"source":"runner.js","original":{"line":2,"column":0}},{"name":"console","generated":{"line":10,"column":0},"source":"runner.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":7},"source":"runner.js","original":{"line":4,"column":7}},{"name":"log","generated":{"line":10,"column":8},"source":"runner.js","original":{"line":4,"column":8}},{"generated":{"line":10,"column":11},"source":"runner.js","original":{"line":4,"column":0}},{"name":"process","generated":{"line":10,"column":12},"source":"runner.js","original":{"line":4,"column":12}},{"generated":{"line":10,"column":19},"source":"runner.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"runner.js","original":{"line":6,"column":0}},{"name":"day","generated":{"line":11,"column":4},"source":"runner.js","original":{"line":6,"column":6}},{"generated":{"line":11,"column":7},"source":"runner.js","original":{"line":6,"column":9}},{"name":"process","generated":{"line":11,"column":10},"source":"runner.js","original":{"line":6,"column":12}},{"generated":{"line":11,"column":17},"source":"runner.js","original":{"line":6,"column":19}},{"name":"argv","generated":{"line":11,"column":18},"source":"runner.js","original":{"line":6,"column":20}},{"generated":{"line":11,"column":22},"source":"runner.js","original":{"line":6,"column":12}},{"generated":{"line":11,"column":23},"source":"runner.js","original":{"line":6,"column":25}},{"generated":{"line":11,"column":24},"source":"runner.js","original":{"line":6,"column":12}},{"generated":{"line":11,"column":25},"source":"runner.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"runner.js","original":{"line":7,"column":0}},{"name":"part","generated":{"line":12,"column":4},"source":"runner.js","original":{"line":7,"column":6}},{"generated":{"line":12,"column":8},"source":"runner.js","original":{"line":7,"column":10}},{"name":"process","generated":{"line":12,"column":11},"source":"runner.js","original":{"line":7,"column":13}},{"generated":{"line":12,"column":18},"source":"runner.js","original":{"line":7,"column":20}},{"name":"argv","generated":{"line":12,"column":19},"source":"runner.js","original":{"line":7,"column":21}},{"generated":{"line":12,"column":23},"source":"runner.js","original":{"line":7,"column":13}},{"generated":{"line":12,"column":24},"source":"runner.js","original":{"line":7,"column":26}},{"generated":{"line":12,"column":25},"source":"runner.js","original":{"line":7,"column":13}},{"generated":{"line":12,"column":26},"source":"runner.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"runner.js","original":{"line":8,"column":0}},{"name":"command","generated":{"line":13,"column":4},"source":"runner.js","original":{"line":8,"column":6}},{"generated":{"line":13,"column":11},"source":"runner.js","original":{"line":8,"column":13}},{"name":"process","generated":{"line":13,"column":14},"source":"runner.js","original":{"line":8,"column":16}},{"generated":{"line":13,"column":21},"source":"runner.js","original":{"line":8,"column":23}},{"name":"argv","generated":{"line":13,"column":22},"source":"runner.js","original":{"line":8,"column":24}},{"generated":{"line":13,"column":26},"source":"runner.js","original":{"line":8,"column":16}},{"generated":{"line":13,"column":27},"source":"runner.js","original":{"line":8,"column":29}},{"generated":{"line":13,"column":28},"source":"runner.js","original":{"line":8,"column":16}},{"generated":{"line":13,"column":29},"source":"runner.js","original":{"line":8,"column":0}},{"name":"console","generated":{"line":14,"column":0},"source":"runner.js","original":{"line":10,"column":0}},{"generated":{"line":14,"column":7},"source":"runner.js","original":{"line":10,"column":7}},{"name":"log","generated":{"line":14,"column":8},"source":"runner.js","original":{"line":10,"column":8}},{"generated":{"line":14,"column":11},"source":"runner.js","original":{"line":10,"column":0}},{"name":"day","generated":{"line":14,"column":12},"source":"runner.js","original":{"line":10,"column":12}},{"generated":{"line":14,"column":15},"source":"runner.js","original":{"line":10,"column":0}},{"name":"console","generated":{"line":15,"column":0},"source":"runner.js","original":{"line":11,"column":0}},{"generated":{"line":15,"column":7},"source":"runner.js","original":{"line":11,"column":7}},{"name":"log","generated":{"line":15,"column":8},"source":"runner.js","original":{"line":11,"column":8}},{"generated":{"line":15,"column":11},"source":"runner.js","original":{"line":11,"column":0}},{"name":"part","generated":{"line":15,"column":12},"source":"runner.js","original":{"line":11,"column":12}},{"generated":{"line":15,"column":16},"source":"runner.js","original":{"line":11,"column":0}},{"name":"console","generated":{"line":16,"column":0},"source":"runner.js","original":{"line":12,"column":0}},{"generated":{"line":16,"column":7},"source":"runner.js","original":{"line":12,"column":7}},{"name":"log","generated":{"line":16,"column":8},"source":"runner.js","original":{"line":12,"column":8}},{"generated":{"line":16,"column":11},"source":"runner.js","original":{"line":12,"column":0}},{"name":"command","generated":{"line":16,"column":12},"source":"runner.js","original":{"line":12,"column":12}},{"generated":{"line":16,"column":19},"source":"runner.js","original":{"line":12,"column":0}},{"name":"console","generated":{"line":17,"column":0},"source":"runner.js","original":{"line":14,"column":0}},{"generated":{"line":17,"column":7},"source":"runner.js","original":{"line":14,"column":7}},{"name":"log","generated":{"line":17,"column":8},"source":"runner.js","original":{"line":14,"column":8}},{"generated":{"line":17,"column":11},"source":"runner.js","original":{"line":14,"column":0}},{"name":"solutions","generated":{"line":17,"column":12},"source":"runner.js","original":{"line":14,"column":12}},{"generated":{"line":17,"column":21},"source":"runner.js","original":{"line":14,"column":21}},{"name":"day","generated":{"line":17,"column":22},"source":"runner.js","original":{"line":14,"column":22}},{"generated":{"line":17,"column":25},"source":"runner.js","original":{"line":14,"column":21}},{"generated":{"line":17,"column":26},"source":"runner.js","original":{"line":14,"column":0}}],"sources":{"runner.js":"import * as solutions from './solutions'\nimport * as tests from './tests'\n\nconsole.log(process)\n\nconst day = process.argv[2]\nconst part = process.argv[3]\nconst command = process.argv[4]\n\nconsole.log(day)\nconsole.log(part)\nconsole.log(command)\n\nconsole.log(solutions[day])\n"},"lineCount":null}},"hash":"7f87d204610207378912eada2752b140","cacheData":{"env":{}}}