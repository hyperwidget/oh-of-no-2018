{"version":3,"sources":["solutions/day1.js","solutions/day2.js","solutions/index.js","tests/day1.js","tests/day2.js","tests/index.js","utils/readFile.js","runner.js"],"names":["solution","a","input","providedInput","reduce","tally","inputVal","eval","b","inputs","frequencies","foundDuplicate","currentFrequency","index","length","tests","expected","readFile","day","dir","process","cwd","console","log","encoding","split","argv","part","command","forEach","test","errMessage","result","solutions","pass"],"mappings":"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","file":"runner.map","sourceRoot":"..","sourcesContent":["export const solution = {\n  a: {\n    input: providedInput,\n    solution: input => {\n      return input.reduce((tally, inputVal) => (tally += eval(inputVal)), 0)\n    }\n  },\n  b: {\n    input: providedInput,\n    solution: inputs => {\n      let frequencies = { 0: true }\n      let foundDuplicate = false\n      let currentFrequency = 0\n\n      while (!foundDuplicate) {\n        for (let index = 0; index < inputs.length && !foundDuplicate; index++) {\n          currentFrequency += eval(inputs[index])\n\n          if (frequencies[currentFrequency]) {\n            foundDuplicate = true\n          } else {\n            frequencies[currentFrequency] = true\n          }\n        }\n      }\n\n      return currentFrequency\n    }\n  }\n}\n\nexport default solution\n","export const solution = {\n  a: {\n    input: `Day1AInput`,\n    solution: input => {\n      return input\n    }\n  },\n  b: {\n    input: `Day1BInput`,\n    solution: input => {\n      return input\n    }\n  }\n}\n\nexport default solution\n","export { default as day1 } from './day1'\nexport { default as day2 } from './day2'\n","export const tests = {\n  a: [\n    { input: [`+1`, `-2`, `+3`, `+1`], expected: 3 },\n    { input: [`+1`, `+1`, `-2`], expected: 0 },\n    { input: [`-1`, `-2`, `-3`], expected: -6 }\n  ],\n  b: [\n    { input: [`+1`, `-1`], expected: 0 },\n    { input: [`+3`, `+3`, `+4`, `-2`, `-4`], expected: 10 },\n    { input: [`-6`, `+3`, `+8`, `+5`, `-6`], expected: 5 },\n    { input: [`+7`, `+7`, `-2`, `-7`, `-4`], expected: 14 }\n  ]\n}\n\nexport default tests\n","export const tests = {\n  a: [\n    { input: 1, expected: 2 },\n    { input: 1, expected: 1 },\n    { input: 1, expected: 3 },\n    { input: 1, expected: 7 }\n  ],\n  b: [{ input: 1, expected: 1 }]\n}\n\nexport default tests\n","export { default as day1 } from './day1'\nexport { default as day2 } from './day2'\n","import { readFileSync } from 'fs'\n\nexport const readFile = day => {\n  const dir = process.cwd()\n  console.log(dir)\n  return readFileSync(`${dir}/inputFiles/${day}.txt`, {\n    encoding: 'utf8'\n  }).split('\\n')\n}\n\nexport default readFile\n","import * as solutions from './solutions'\nimport * as tests from './tests'\nimport { readFile } from './utils/readFile'\n\nconst day = process.argv[2]\nconst part = process.argv[3]\nconst command = process.argv[4]\n\nconsole.log(`Running ${day} ${part} ${command}`)\n\nif (command === 'test') {\n  tests[day][part].forEach((test, index) => {\n    let errMessage = ''\n    const result = solutions[day][part].solution(test.input)\n    const pass = result === test.expected\n    if (!pass) {\n      errMessage = `Expected: ${test.expected} Got: ${result}`\n    }\n\n    console.log(`Test ${index + 1}: ${pass ? 'Pass!' : 'Fail!'} ${errMessage}`)\n  })\n} else if (command === 'process') {\n  const solution = solutions[day][part]\n  const result = solution.solution(readFile(day))\n\n  console.log(`Answer: ${result}`)\n}\n"]}