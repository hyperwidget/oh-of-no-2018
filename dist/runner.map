{"version":3,"sources":["solutions/day1.js","solutions/index.js","tests/day1.js","tests/index.js","runner.js"],"names":["solution","a","input","b","tests","expected","day","process","argv","part","command","console","log","solutions","forEach","test","index","errMessage","result","pass"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,QAAQ,GAAG;AACtBC,EAAAA,CAAC,EAAE;AACDC,IAAAA,KAAK,EAAG,YADP;AAEDF,IAAAA,QAAQ,EAAEE,KAAK,IAAI;AACjB,aAAOA,KAAP;AACD;AAJA,GADmB;AAOtBC,EAAAA,CAAC,EAAE;AACDD,IAAAA,KAAK,EAAG,YADP;AAEDF,IAAAA,QAAQ,EAAEE,KAAK,IAAI;AACjB,aAAOA,KAAP;AACD;AAJA;AAPmB,CAAjB;;eAeQF;;;;;;;;;;;;;;;ACff;;;;;;;;;;ACAO,MAAMI,KAAK,GAAG;AACnBH,EAAAA,CAAC,EAAE,CACD;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYG,IAAAA,QAAQ,EAAE;AAAtB,GADC,EAED;AAAEH,IAAAA,KAAK,EAAE,CAAT;AAAYG,IAAAA,QAAQ,EAAE;AAAtB,GAFC,EAGD;AAAEH,IAAAA,KAAK,EAAE,CAAT;AAAYG,IAAAA,QAAQ,EAAE;AAAtB,GAHC,EAID;AAAEH,IAAAA,KAAK,EAAE,CAAT;AAAYG,IAAAA,QAAQ,EAAE;AAAtB,GAJC,CADgB;AAOnBF,EAAAA,CAAC,EAAE,CAAC;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYG,IAAAA,QAAQ,EAAE;AAAtB,GAAD;AAPgB,CAAd;;eAUQD;;;;;;;;;;;;;;;ACVf;;;;;;ACAA;;AACA;;;;AAEA,MAAME,GAAG,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,CAAZ;AACA,MAAMC,IAAI,GAAGF,OAAO,CAACC,IAAR,CAAa,CAAb,CAAb;AACA,MAAME,OAAO,GAAGH,OAAO,CAACC,IAAR,CAAa,CAAb,CAAhB;AAEAG,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAC,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACP,GAAD,CAAT,CAAeG,IAAf,EAAqBP,KAAjC;;AAEA,IAAIQ,OAAO,KAAK,MAAhB,EAAwB;AACtBN,EAAAA,KAAK,CAACE,GAAD,CAAL,CAAWG,IAAX,EAAiBK,OAAjB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,QAAIC,UAAU,GAAG,EAAjB;AACA,UAAMC,MAAM,GAAGL,SAAS,CAACP,GAAD,CAAT,CAAeG,IAAf,EAAqBT,QAArB,CAA8Be,IAAI,CAACb,KAAnC,CAAf;AACA,UAAMiB,IAAI,GAAGD,MAAM,KAAKH,IAAI,CAACV,QAA7B;;AACA,QAAI,CAACc,IAAL,EAAW;AACTF,MAAAA,UAAU,GAAI,aAAYF,IAAI,CAACV,QAAS,SAAQa,MAAO,EAAvD;AACD;;AAEDP,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAOI,KAAM,KAAIG,IAAI,GAAG,OAAH,GAAa,OAAQ,IAAGF,UAAW,EAArE;AACD,GATD;AAUD,CAXD,MAWO,IAAIP,OAAO,KAAK,SAAhB,EAA2B;AAChC,QAAMV,QAAQ,GAAGa,SAAS,CAACP,GAAD,CAAT,CAAeG,IAAf,CAAjB;AACA,QAAMS,MAAM,GAAGlB,QAAQ,CAACA,QAAT,CAAkBA,QAAQ,CAACE,KAA3B,CAAf;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAUM,MAAO,EAA9B;AACD","file":"runner.map","sourceRoot":"..","sourcesContent":["export const solution = {\n  a: {\n    input: `Day1AInput`,\n    solution: input => {\n      return input\n    }\n  },\n  b: {\n    input: `Day1BInput`,\n    solution: input => {\n      return input\n    }\n  }\n}\n\nexport default solution\n","export { default as day1 } from './day1'\n","export const tests = {\n  a: [\n    { input: 1, expected: 2 },\n    { input: 1, expected: 1 },\n    { input: 1, expected: 3 },\n    { input: 1, expected: 7 }\n  ],\n  b: [{ input: 1, expected: 1 }]\n}\n\nexport default tests\n","export { default as day1 } from './day1'\n","import * as solutions from './solutions'\nimport * as tests from './tests'\n\nconst day = process.argv[2]\nconst part = process.argv[3]\nconst command = process.argv[4]\n\nconsole.log(day)\nconsole.log(part)\nconsole.log(command)\n\nconsole.log(solutions[day][part].input)\n\nif (command === 'test') {\n  tests[day][part].forEach((test, index) => {\n    let errMessage = ''\n    const result = solutions[day][part].solution(test.input)\n    const pass = result === test.expected\n    if (!pass) {\n      errMessage = `Expected: ${test.expected} Got: ${result}`\n    }\n\n    console.log(`Test ${index}: ${pass ? 'Pass!' : 'Fail!'} ${errMessage}`)\n  })\n} else if (command === 'process') {\n  const solution = solutions[day][part]\n  const result = solution.solution(solution.input)\n\n  console.log(`Answer: ${result}`)\n}\n"]}