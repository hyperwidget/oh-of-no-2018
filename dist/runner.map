{"version":3,"sources":["utils/readFile.js","days/day1/solution.js","days/day1/test.js","days/day1/index.js","days/day2/solution.js","days/day2/test.js","days/day2/index.js","days/index.js","runner.js"],"names":["readFile","day","dir","process","cwd","console","log","encoding","split","a","input","reduce","tally","inputVal","eval","b","inputs","frequencies","foundDuplicate","currentFrequency","index","length","expected","solutions","tests","double","triple","forEach","id","tracked","doubleUsed","tripleUsed","splitVal","val","Object","keys","key","splitValues","map","retVal","value","comparedAgainst","differences","i","slice","concat","join","argv","part","command","dayCode","days","test","errMessage","result","pass","solution"],"mappings":"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","file":"runner.map","sourceRoot":"..","sourcesContent":["import { readFileSync } from 'fs'\n\nexport const readFile = day => {\n  const dir = process.cwd()\n  console.log(dir)\n  return readFileSync(`${dir}/days/${day}/inputFile.txt`, {\n    encoding: 'utf8'\n  }).split('\\n')\n}\n\nexport default readFile\n","export default {\n  a: input => {\n    return input.reduce((tally, inputVal) => (tally += eval(inputVal)), 0)\n  },\n  b: inputs => {\n    let frequencies = { 0: true }\n    let foundDuplicate = false\n    let currentFrequency = 0\n\n    while (!foundDuplicate) {\n      for (let index = 0; index < inputs.length && !foundDuplicate; index++) {\n        currentFrequency += eval(inputs[index])\n\n        if (frequencies[currentFrequency]) {\n          foundDuplicate = true\n        } else {\n          frequencies[currentFrequency] = true\n        }\n      }\n    }\n\n    return currentFrequency\n  }\n}\n","export default {\n  a: [\n    { input: [`+1`, `-2`, `+3`, `+1`], expected: 3 },\n    { input: [`+1`, `+1`, `-2`], expected: 0 },\n    { input: [`-1`, `-2`, `-3`], expected: -6 }\n  ],\n  b: [\n    { input: [`+1`, `-1`], expected: 0 },\n    { input: [`+3`, `+3`, `+4`, `-2`, `-4`], expected: 10 },\n    { input: [`-6`, `+3`, `+8`, `+5`, `-6`], expected: 5 },\n    { input: [`+7`, `+7`, `-2`, `-7`, `-4`], expected: 14 }\n  ]\n}\n","import { default as solutions } from './solution'\nimport { default as tests } from './test'\n\nexport default { solutions, tests }\n","export default {\n  a: input => {\n    let double = 0\n    let triple = 0\n    input.forEach(id => {\n      let tracked = {}\n      let doubleUsed = false\n      let tripleUsed = false\n      const splitVal = id.split('')\n      splitVal.forEach(val => {\n        if (tracked[val]) {\n          tracked[val]++\n        } else {\n          tracked[val] = 1\n        }\n      })\n\n      Object.keys(tracked).forEach(key => {\n        if (!doubleUsed && tracked[key] === 2) {\n          double++\n          doubleUsed = true\n        }\n\n        if (!tripleUsed && tracked[key] === 3) {\n          triple++\n          tripleUsed = true\n        }\n      })\n    })\n    return double * triple\n  },\n  b: input => {\n    const splitValues = input.map(val => val.split(''))\n    let retVal = null\n\n    splitValues.forEach(value => {\n      splitValues.forEach(comparedAgainst => {\n        let index = -1\n        let differences = 0\n\n        for (let i = 0; i < comparedAgainst.length && differences < 2; i++) {\n          if (comparedAgainst[i] !== value[i]) {\n            differences++\n            index = i\n          }\n        }\n\n        if (differences === 1) {\n          retVal = comparedAgainst\n            .slice(0, index)\n            .concat(comparedAgainst.slice(index + 1))\n            .join('')\n        }\n      })\n    })\n\n    return retVal\n  }\n}\n","export default {\n  a: [\n    {\n      input: [\n        'abcdef',\n        'bababc',\n        'abbcde',\n        'abcccd',\n        'aabcdd',\n        'abcdee',\n        'ababab'\n      ],\n      expected: 12\n    }\n  ],\n  b: [\n    {\n      input: ['abcde', 'fghij', 'klmno', 'pqrst', 'fguij', 'axcye', 'wvxyz'],\n      expected: 'fgij'\n    },\n    {\n      input: [\n        'abcde',\n        'fghijasdfac',\n        'klmno',\n        'pqrst',\n        'fghijusdfac',\n        'axcye',\n        'wvxyz'\n      ],\n      expected: 'fghijsdfac'\n    }\n  ]\n}\n","import { default as solutions } from './solution'\nimport { default as tests } from './test'\n\nexport default { solutions, tests }\n","export { default as day1 } from './day1'\nexport { default as day2 } from './day2'\n","import { readFile } from './utils/readFile'\nimport * as days from './days'\n\nconst day = process.argv[2]\nconst part = process.argv[3]\nconst command = process.argv[4]\nconst dayCode = days[day]\n\nconsole.log(`Running ${day} ${part} ${command}`)\n\nif (command === 'test') {\n  dayCode.tests[part].forEach((test, index) => {\n    let errMessage = ''\n    const result = dayCode.solutions[part](test.input)\n    const expected = test.expected\n    const pass = result === expected\n    if (!pass) {\n      errMessage = `Expected: ${expected} Got: ${result}`\n    }\n\n    console.log(`Test ${index + 1}: ${pass ? 'Pass!' : 'Fail!'} ${errMessage}`)\n  })\n} else if (command === 'process') {\n  const solution = dayCode.solutions[part]\n  const result = solution(readFile(day))\n\n  console.log(`Answer: ${result}`)\n}\n"]}