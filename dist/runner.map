{"version":3,"sources":["utils/readFile.js","days/day1/solution.js","days/day1/test.js","days/day1/index.js","days/day2/solution.js","days/day2/test.js","days/day2/index.js","days/index.js","runner.js"],"names":["readFile","day","dir","process","cwd","console","log","encoding","split","a","input","reduce","tally","inputVal","eval","b","inputs","frequencies","foundDuplicate","currentFrequency","index","length","expected","solutions","tests","argv","part","command","dayCode","days","forEach","test","errMessage","result","pass","solution"],"mappings":"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","file":"runner.map","sourceRoot":"..","sourcesContent":["import { readFileSync } from 'fs'\n\nexport const readFile = day => {\n  const dir = process.cwd()\n  console.log(dir)\n  return readFileSync(`${dir}/days/${day}/inputFile.txt`, {\n    encoding: 'utf8'\n  }).split('\\n')\n}\n\nexport default readFile\n","export default {\n  a: input => {\n    return input.reduce((tally, inputVal) => (tally += eval(inputVal)), 0)\n  },\n  b: inputs => {\n    let frequencies = { 0: true }\n    let foundDuplicate = false\n    let currentFrequency = 0\n\n    while (!foundDuplicate) {\n      for (let index = 0; index < inputs.length && !foundDuplicate; index++) {\n        currentFrequency += eval(inputs[index])\n\n        if (frequencies[currentFrequency]) {\n          foundDuplicate = true\n        } else {\n          frequencies[currentFrequency] = true\n        }\n      }\n    }\n\n    return currentFrequency\n  }\n}\n","export default {\n  a: [\n    { input: [`+1`, `-2`, `+3`, `+1`], expected: 3 },\n    { input: [`+1`, `+1`, `-2`], expected: 0 },\n    { input: [`-1`, `-2`, `-3`], expected: -6 }\n  ],\n  b: [\n    { input: [`+1`, `-1`], expected: 0 },\n    { input: [`+3`, `+3`, `+4`, `-2`, `-4`], expected: 10 },\n    { input: [`-6`, `+3`, `+8`, `+5`, `-6`], expected: 5 },\n    { input: [`+7`, `+7`, `-2`, `-7`, `-4`], expected: 14 }\n  ]\n}\n","import { default as solutions } from './solution'\nimport { default as tests } from './test'\n\nexport default { solutions, tests }\n","export default {\n  a: input => {\n    return input\n  },\n  b: input => {\n    return input\n  }\n}\n","export default {\n  a: [\n    { input: 1, expected: 1 },\n    { input: 2, expected: 2 },\n    { input: 3, expected: 3 }\n  ],\n  b: [\n    { input: 1, expected: 1 },\n    { input: 1, expected: 1 },\n    { input: 1, expected: 1 },\n    { input: 1, expected: 1 }\n  ]\n}\n","import { default as solutions } from './solution'\nimport { default as tests } from './test'\n\nexport default { solutions, tests }\n","export { default as day1 } from './day1'\nexport { default as day2 } from './day2'\n","import { readFile } from './utils/readFile'\nimport * as days from './days'\n\nconst day = process.argv[2]\nconst part = process.argv[3]\nconst command = process.argv[4]\nconst dayCode = days[day]\n\nconsole.log(`Running ${day} ${part} ${command}`)\n\nif (command === 'test') {\n  dayCode.tests[part].forEach((test, index) => {\n    let errMessage = ''\n    const result = dayCode.solutions[part](test.input)\n    const expected = test.expected\n    const pass = result === expected\n    if (!pass) {\n      errMessage = `Expected: ${expected} Got: ${result}`\n    }\n\n    console.log(`Test ${index + 1}: ${pass ? 'Pass!' : 'Fail!'} ${errMessage}`)\n  })\n} else if (command === 'process') {\n  const solution = dayCode.solutions[part]\n  const result = solution(readFile(day))\n\n  console.log(`Answer: ${result}`)\n}\n"]}